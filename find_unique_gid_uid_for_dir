#!/bin/bash
##############################################################################
# Description: Script that finds all of the unique UID/GID of a given 
#              directory and output the result in 2 separate files
#
# Author: Dinan Yin (steroidg{REMOVETHIS} AT gmail DOT com)
##############################################################################

print_usage() {
	echo "Usage: ${PROG_NAME} path_to_search uuid_file ugid_file";
	echo "";
	echo "Find all of the unique UID and GID of a given directory.";
	echo "Output the result into uuid_file and guid_file respectively.";
	echo "";
}


PROG_NAME=`basename ${0}`;
if [ $# -ne 3 ]; then
	echo "ERROR: Not enough arguments.";
	print_usage;
	exit 1;
fi

PATH_TO_SEARCH=${1};
UUID_FILE=${2};
UGID_FILE=${3};
BACKUP_DIR=${PROG_NAME}_backup;

if [ ! -d "${PATH_TO_SEARCH}" ]; then
	echo "ERROR: ${PATH_TO_SEARCH} is not a directory.";
	exit 1;
fi

PATH_BASENAME=`basename ${PATH_TO_SEARCH}`;
OUTPUT_LS_FILE="${PATH_BASENAME}_LS";

if [ ! -f ${UUID_FILE} -o ! -f ${UGID_FILE} ]; then
	touch ${UUID_FILE} ${UGID_FILE};
else
	[ ! -d ${BACKUP_DIR} ] && mkdir -p ${BACKUP_DIR};
	cp ${UUID_FILE} ${BACKUP_DIR}/${UUID_FILE}_${PATH_BASENAME};
	cp ${UGID_FILE} ${BACKUP_DIR}/${UGID_FILE}_${PATH_BASENAME};
fi

find ${PATH_TO_SEARCH} -type d -name '[!.]*' -exec ls -land {} \; > ${OUTPUT_LS_FILE};

PREVIOUS_ID="";
for i in `cat ${OUTPUT_LS_FILE} | awk '{print $3}'`; do
	if [ "${i}" != "${PREVIOUS_ID}" ]; then
		if [ -z `cat ${UUID_FILE} | grep ^${i}$` ]; then
			echo "${i}" >> ${UUID_FILE};
		fi
	fi
	PREVIOUS_ID="${i}";
done

PREVIOUS_ID="";
for i in `cat ${OUTPUT_LS_FILE} | awk '{print $4}'`; do
	if [ "${i}" != "${PREVIOUS_ID}" ]; then
		if [ -z `cat ${UGID_FILE} | grep ^${i}$` ]; then
			echo "${i}" >> ${UGID_FILE};
		fi
	fi
	PREVIOUS_ID="${i}";
done

mv ${OUTPUT_LS_FILE} ${BACKUP_DIR};

exit 0;
